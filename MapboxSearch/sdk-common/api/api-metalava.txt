// Signature format: 3.0
package com.mapbox.search.common {

  public interface AsyncOperationTask {
    method public void cancel();
    method public default static com.mapbox.search.common.AsyncOperationTask getCompleted();
    method public boolean isCancelled();
    method public boolean isDone();
    property public abstract boolean isCancelled;
    property public abstract boolean isDone;
    field public static final com.mapbox.search.common.AsyncOperationTask.Companion Companion;
  }

  public static final class AsyncOperationTask.Companion {
    method public com.mapbox.search.common.AsyncOperationTask getCompleted();
    property public final com.mapbox.search.common.AsyncOperationTask COMPLETED;
  }

  @kotlinx.parcelize.Parcelize public final class RoutablePoint implements android.os.Parcelable {
    ctor public RoutablePoint(com.mapbox.geojson.Point point, String name);
    method public String getName();
    method public com.mapbox.geojson.Point getPoint();
    property public final String name;
    property public final com.mapbox.geojson.Point point;
  }

  public final class SearchCancellationException extends java.lang.RuntimeException {
    ctor public SearchCancellationException(String message);
    property public String message;
  }

  public final class SearchRequestException extends java.lang.RuntimeException {
    ctor public SearchRequestException(String message, int code, Exception? cause = null);
    method public Exception? getCause();
    method public int getCode();
    method public boolean isClientError();
    method public boolean isServerError();
    property public Exception? cause;
    property public final int code;
    property public String message;
  }

}

package com.mapbox.search.common.concurrent {

  public interface MainThreadWorker {
    method public void cancel(Runnable runnable);
    method public java.util.concurrent.Executor getMainExecutor();
    method public boolean isMainThread();
    method public void post(Runnable runnable);
    method public void postDelayed(long delay, java.util.concurrent.TimeUnit unit = java.util.concurrent.TimeUnit.MILLISECONDS, Runnable runnable);
    property public abstract boolean isMainThread;
    property public abstract java.util.concurrent.Executor mainExecutor;
  }

  public final class SearchSdkMainThreadWorker implements com.mapbox.search.common.concurrent.MainThreadWorker {
    method public void cancel(Runnable runnable);
    method public com.mapbox.search.common.concurrent.MainThreadWorker getDelegate();
    method public java.util.concurrent.Executor getMainExecutor();
    method public boolean isMainThread();
    method public void post(Runnable runnable);
    method public void postDelayed(long delay, java.util.concurrent.TimeUnit unit, Runnable runnable);
    method public void resetDelegate();
    method public void setDelegate(com.mapbox.search.common.concurrent.MainThreadWorker p);
    property public final com.mapbox.search.common.concurrent.MainThreadWorker delegate;
    property public boolean isMainThread;
    property public java.util.concurrent.Executor mainExecutor;
    field public static final com.mapbox.search.common.concurrent.SearchSdkMainThreadWorker INSTANCE;
  }

}

package com.mapbox.search.common.metadata {

  public abstract class OpenHours implements android.os.Parcelable {
    ctor public OpenHours();
  }

  @kotlinx.parcelize.Parcelize public static final class OpenHours.AlwaysOpen extends com.mapbox.search.common.metadata.OpenHours {
    field public static final com.mapbox.search.common.metadata.OpenHours.AlwaysOpen INSTANCE;
  }

  @kotlinx.parcelize.Parcelize public static final class OpenHours.PermanentlyClosed extends com.mapbox.search.common.metadata.OpenHours {
    field public static final com.mapbox.search.common.metadata.OpenHours.PermanentlyClosed INSTANCE;
  }

  @kotlinx.parcelize.Parcelize public static final class OpenHours.Scheduled extends com.mapbox.search.common.metadata.OpenHours {
    ctor public OpenHours.Scheduled(java.util.List<com.mapbox.search.common.metadata.OpenPeriod> periods);
    method public java.util.List<com.mapbox.search.common.metadata.OpenPeriod> getPeriods();
    property public final java.util.List<com.mapbox.search.common.metadata.OpenPeriod> periods;
  }

  @kotlinx.parcelize.Parcelize public static final class OpenHours.TemporaryClosed extends com.mapbox.search.common.metadata.OpenHours {
    field public static final com.mapbox.search.common.metadata.OpenHours.TemporaryClosed INSTANCE;
  }

  @kotlinx.parcelize.Parcelize public final class OpenPeriod implements android.os.Parcelable {
    ctor public OpenPeriod(com.mapbox.search.common.metadata.WeekTimestamp open, com.mapbox.search.common.metadata.WeekTimestamp closed);
    method public com.mapbox.search.common.metadata.WeekTimestamp component1();
    method public com.mapbox.search.common.metadata.WeekTimestamp component2();
    method @kotlinx.parcelize.Parcelize public com.mapbox.search.common.metadata.OpenPeriod copy(com.mapbox.search.common.metadata.WeekTimestamp open, com.mapbox.search.common.metadata.WeekTimestamp closed);
    method public com.mapbox.search.common.metadata.WeekTimestamp getClosed();
    method public com.mapbox.search.common.metadata.WeekTimestamp getOpen();
    property public final com.mapbox.search.common.metadata.WeekTimestamp closed;
    property public final com.mapbox.search.common.metadata.WeekTimestamp open;
  }

  @kotlinx.parcelize.Parcelize public final class ParkingData implements android.os.Parcelable {
    ctor public ParkingData(int totalCapacity, int reservedForDisabilities);
    method public int getReservedForDisabilities();
    method public int getTotalCapacity();
    property public final int reservedForDisabilities;
    property public final int totalCapacity;
  }

  public enum WeekDay {
    method public final byte getInternalRawCode();
    method public final int getIsoCode();
    property public final byte internalRawCode;
    property public final int isoCode;
    enum_constant public static final com.mapbox.search.common.metadata.WeekDay FRIDAY;
    enum_constant public static final com.mapbox.search.common.metadata.WeekDay MONDAY;
    enum_constant public static final com.mapbox.search.common.metadata.WeekDay SATURDAY;
    enum_constant public static final com.mapbox.search.common.metadata.WeekDay SUNDAY;
    enum_constant public static final com.mapbox.search.common.metadata.WeekDay THURSDAY;
    enum_constant public static final com.mapbox.search.common.metadata.WeekDay TUESDAY;
    enum_constant public static final com.mapbox.search.common.metadata.WeekDay WEDNESDAY;
  }

  @kotlinx.parcelize.Parcelize public final class WeekTimestamp implements android.os.Parcelable {
    ctor public WeekTimestamp(com.mapbox.search.common.metadata.WeekDay day, int hour, int minute);
    method public com.mapbox.search.common.metadata.WeekDay component1();
    method public int component2();
    method public int component3();
    method @kotlinx.parcelize.Parcelize public com.mapbox.search.common.metadata.WeekTimestamp copy(com.mapbox.search.common.metadata.WeekDay day, int hour, int minute);
    method public com.mapbox.search.common.metadata.WeekDay getDay();
    method public int getHour();
    method public int getMinute();
    property public final com.mapbox.search.common.metadata.WeekDay day;
    property public final int hour;
    property public final int minute;
  }

}

